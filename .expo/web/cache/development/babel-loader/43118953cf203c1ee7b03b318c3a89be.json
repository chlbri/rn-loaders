{"ast":null,"code":"import { useEffect } from 'react';\nimport { Easing, useSharedValue, withRepeat, withTiming } from 'react-native-reanimated';\nimport { N } from \"../constants\";\nimport Square from \"./components/Square\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar ClockLoader = function ClockLoader() {\n  var progress = useSharedValue(0);\n  useEffect(function () {\n    progress.value = withRepeat(withTiming(2 * Math.PI, {\n      duration: 8000,\n      easing: Easing.linear\n    }), -1);\n  }, []);\n  return _jsx(_Fragment, {\n    children: new Array(N).fill(0).map(function (_, index) {\n      return _jsx(Square, {\n        index: index,\n        progress: progress\n      }, index);\n    })\n  });\n};\n\nexport default ClockLoader;","map":{"version":3,"sources":["/workspace/rn-loaders/src/Loaders/Clock.tsx"],"names":["useEffect","Easing","useSharedValue","withRepeat","withTiming","N","Square","ClockLoader","progress","value","Math","PI","duration","easing","linear","Array","fill","map","_","index"],"mappings":"AAAA,SAAaA,SAAb,QAA8B,OAA9B;AACA,SACEC,MADF,EAEEC,cAFF,EAGEC,UAHF,EAIEC,UAJF,QAKO,yBALP;AAMA,SAASC,CAAT;AACA,OAAOC,MAAP;;;;AAEA,IAAMC,WAAe,GAAG,SAAlBA,WAAkB,GAAM;AAC5B,MAAMC,QAAQ,GAAGN,cAAc,CAAC,CAAD,CAA/B;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,QAAQ,CAACC,KAAT,GAAiBN,UAAU,CACzBC,UAAU,CAAC,IAAIM,IAAI,CAACC,EAAV,EAAc;AACtBC,MAAAA,QAAQ,EAAE,IADY;AAEtBC,MAAAA,MAAM,EAAEZ,MAAM,CAACa;AAFO,KAAd,CADe,EAKzB,CAAC,CALwB,CAA3B;AAOD,GARQ,EAQN,EARM,CAAT;AASA,SACE;AAAA,cACG,IAAIC,KAAJ,CAAUV,CAAV,EAAaW,IAAb,CAAkB,CAAlB,EAAqBC,GAArB,CAAyB,UAACC,CAAD,EAAIC,KAAJ,EAAc;AACtC,aAAO,KAAC,MAAD;AAA0BA,QAAAA,KAAK,EAALA,KAA1B;AAAiCX,QAAAA,QAAQ,EAARA;AAAjC,SAAaW,KAAb,CAAP;AACD,KAFA;AADH,IADF;AAOD,CAnBD;;AAqBA,eAAeZ,WAAf","sourcesContent":["import { FC, useEffect } from 'react';\nimport {\n  Easing,\n  useSharedValue,\n  withRepeat,\n  withTiming,\n} from 'react-native-reanimated';\nimport { N } from '../constants';\nimport Square from './components/Square';\n\nconst ClockLoader: FC = () => {\n  const progress = useSharedValue(0);\n\n  useEffect(() => {\n    progress.value = withRepeat(\n      withTiming(2 * Math.PI, {\n        duration: 8000,\n        easing: Easing.linear,\n      }),\n      -1,\n    );\n  }, []);\n  return (\n    <>\n      {new Array(N).fill(0).map((_, index) => {\n        return <Square key={index} {...{ index, progress }} />;\n      })}\n    </>\n  );\n};\n\nexport default ClockLoader;\n"]},"metadata":{},"sourceType":"module"}